<template>
  <view class="container">
    <!-- 闪屏 -->
    <view v-if="showSplash" class="splash-screen">
      <image class="splash-image" src="/static/启动页闪屏.png" mode="widthFix"></image>
    </view>
    
    <!-- 欢迎页 -->
    <view v-else class="welcome-box">
      <!-- 添加背景图片 -->
      <image class="background-image" src="/static/landingB.png" mode="aspectFill"></image>
      
      <!-- 开始体验按钮 -->
      <view 
        class="button button1" 
        @click="startQuiz"
      >
        <text class="button-text">开始体验</text>
      </view>
      
      <!-- 登录已有账号文本 -->
      <text class="login-text" @tap="goToLogin">登录已有账号</text>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      showSplash: true,  // 控制闪屏显示
      username: ''       // 用于存储从上一页接收的用户名
    };
  },
  methods: {
    startQuiz() {
      console.log('开始体验按钮被点击');
      // 生成随机用户名
      this.username = 'user_' + Math.floor(Math.random() * 10000);
      console.log('生成的用户名:', this.username);
      // 跳转到问题页面并传递用户名
      uni.navigateTo({
        url: `/pages/experience/experience?username=${this.username}`
      });
    },
    goToLogin() {
      console.log('登录已有账号文本被点击');
      // 跳转到登录页面
      uni.navigateTo({
        url: '/pages/login/login'
      });
    }
  },
  mounted() {  // 使用 mounted 钩子
    console.log('页面已挂载');
    // 获取URL传递的参数
    if (this.$route && this.$route.query.username) {
      this.username = this.$route.query.username;
      console.log('接收到的用户名:', this.username);
    }
    
    // 设置闪屏持续时间（例如 2 秒）
    setTimeout(() => {
      console.log('隐藏闪屏');
      this.showSplash = false;
    }, 2000);
  }
};
</script>

<style scoped>
.container {
  width: 100%;
  height: 100vh; /* 使用视口高度确保占满整个屏幕 */
  overflow: hidden;
  position: relative; /* 确保子元素的绝对定位基于此容器 */

  /* 适配 iOS 的安全区域 */
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* 闪屏样式 */
.splash-screen {
  position: absolute; /* 使用绝对定位覆盖整个容器 */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ffffff; /* 背景颜色，可以根据需求更改 */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000; /* 确保闪屏在最上层 */
}

.splash-image {
  width: 100%;
  height: 100%;
  object-fit: cover; /* 确保图片覆盖整个容器 */
}

/* 欢迎页样式 */
.welcome-box {
  position: relative;
  width: 100%;
  height: 100%;
}

.background-image {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover; /* 确保背景图片覆盖整个容器 */
}

.button {
  width: 600rpx;
  height: 80rpx;
  border: none;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  transition: transform 0.2s;
  border-color: #ffffff;
  background-color: #ffffff;
}

.button1 {
  background-color: #9EE44D;
  border-radius: 45rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  bottom: 265rpx;
  transform: translateX(-50%);
}

.login-text {
  color: #9EE44D;
  font-size: 32rpx;
  text-decoration: underline;
  position: absolute;
  bottom: 190rpx;
  left: 50%;
  transform: translateX(-50%);
}

.button-text {
  color: #252529;
  font-size: 32rpx;
  font-weight: bold;
}

/* 针对 iOS 的特定样式调整 */
@media (ios) {
  .button {
    /* 示例：在 iOS 上增加按钮的阴影 */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .login-text {
    /* 示例：在 iOS 上增加更大的点击区域 */
    padding: 10rpx;
  }
}
</style>
 