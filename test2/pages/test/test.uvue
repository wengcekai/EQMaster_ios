<template>
  <view class="container">
    <!-- 调试信息显示区域 -->
    <!-- <view class="debug-info"> -->
      <!-- <text>Scenario Data: {{ JSON.stringify(scenarioData) }}</text> -->
    <!-- </view> -->

    <!-- 背景图片 -->
    <image class="background-image" src="/static/bg1.png" mode="aspectFill" />

    <!-- 房间信息 -->
<!--    <view class="room-info">
      <text class="room-text">三楼电梯间</text>
    </view> -->
	
	<image class="logo" src="/static/sign.png" mode="aspectFit" />
	<text class="room-text">三楼电梯间</text>

    <!-- 灰色圆圈和图标 -->
<!--    <view class="gray-circle">
      <image class="logo" src="/static/sign.png" mode="aspectFit" />
    </view> -->
    
    <!-- 文字框 -->
    <view class="text-box">
      <text class="text-content">{{ background }}</text>
      <view class="expand-icon" @tap="navigateToTest1" style="margin-left: auto;">
        <image class="icon-image" src="/static/icon3.png" mode="aspectFit" />
      </view>
    </view>
	
  </view>
</template>
<script>
export default {
  data() {
    return {
      userId: '',
      username: '',
      gender: '',
      selectedOptions: [],
      birthday: null,
      scenarioData: null,
      background: '请点击下方箭头继续',
      jobId: ''
    };
  },
  onLoad(option) {
    console.log('Received options:', option);

    // 接收上一个页面传递的数据
    this.userId = option.userId || '';
    this.username = decodeURIComponent(option.username || '');
    this.gender = option.gender || '';

    if (option.options) {
      try {
        this.selectedOptions = JSON.parse(decodeURIComponent(option.options));
      } catch (e) {
        console.error('Error parsing options:', e);
        this.selectedOptions = [];
      }
    }

    if (option.birthday) {
      try {
        this.birthday = JSON.parse(decodeURIComponent(option.birthday));
      } catch (e) {
        console.error('Error parsing birthday:', e);
        this.birthday = null;
      }
    }

    console.log('Parsed data:', {
      userId: this.userId,
      username: this.username,
      gender: this.gender,
      selectedOptions: this.selectedOptions,
      birthday: this.birthday
    });

    // 发送数据到后端
    this.sendDataToBackend();
  },
  methods: {
    navigateToTest1() {
      const testPageUrl = `/pages/test/test1?jobId=${this.jobId}&userId=${this.userId}&username=${encodeURIComponent(this.username)}&gender=${this.gender}&birthday=${encodeURIComponent(JSON.stringify(this.birthday))}&options=${encodeURIComponent(JSON.stringify(this.selectedOptions))}`;
      
      uni.navigateTo({
        url: testPageUrl
      });
    },
    sendDataToBackend() {
      uni.request({
        url: 'https://eqmaster.azurewebsites.net/create_profile', // 替换为您的后端服务地址
        method: 'POST',
        data: {
          name: this.username,
          job_level: this.jobLevel || '',
          gender: this.gender,
          concerns: this.selectedOptions,
        },
        success: (res) => {
          console.log('Backend response:', res.data);
          this.jobId = res.data.job_id; // 存储返回的 job_id

          // 获取 job_id 后立即调用 start_scenario
          this.getScenarioData();
        },
        fail: (err) => {
          console.error('Error sending data to backend:', err);
        }
      });
    },
    getScenarioData() {
      uni.request({
        url: 'https://eqmaster.azurewebsites.net/start_scenario', // 替换为您的后端服务地址
        method: 'POST',
        success: (res) => {
          try {
            const data = typeof res.data === 'string' ? JSON.parse(res.data) : res.data;
            console.log('Scenario data:', data);
            this.scenarioData = data.scenes || null;
            this.handleScenarioData();
          } catch (error) {
            console.error('Error parsing scenario data:', error);
            this.background = '获取场景数据时出错。';
          }
        },
        fail: (err) => {
          console.error('Error getting scenario data:', err);
          this.background = '无法获取场景数据。';
        }
      });
    },
    handleScenarioData() {
      if (this.scenarioData) {
        this.background = this.scenarioData.background || '请点击下方箭头继续';
      } else {
        this.background = '请点击下方箭头继续';
      }
    }
  }
};
</script>
<style scoped>
.container {
  position: relative;
  width: 100%;
  height: 100%;
}

.background-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.room-info {
  position: absolute;
  top: 80rpx;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(55, 55, 66, 0.4);
  border-radius: 40rpx;
  padding: 24rpx 20rpx;
  width: 280rpx;
  box-sizing: border-box;
}

.room-text {
  color: #ffffff;
  font-size: 32rpx;
  text-align: center;
  /* padding-right: 20rpx; */
  top:10.5%;
  
}

/* .gray-circle {
  position: absolute;
  width: 70rpx;
  height: 70rpx;
  background-color: #373742;
  border-radius: 50%;
  top: 122rpx;
  left: 260rpx;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
} */

.logo {
  width: 300rpx; 
  height: 300rpx;
  position: absolute;
  top: 11%;
  left: 50%;
  transform: translate(-50%, -50%); /* 同时水平和垂直居中 */
}

.text-box {
  position: absolute;
  bottom: 80rpx;
  left: 40rpx;
  right: 40rpx;
  background-color: rgba(55, 55, 66, 0.8);
  border-radius: 50rpx;
  padding-top: 50rpx;
  padding-bottom: 50rpx;
  padding-left: 50rpx;
  padding-right: 50rpx;
  z-index: 1;
  min-height: 100rpx;
  max-height: 400rpx;
  overflow: auto;
  border: 6rpx solid #F2BC74; /* 示例边框颜色 */
}

.text-content {
  color: white;
  font-size: 28rpx;
  line-height: 1.4;
}

.expand-icon {
  text-align: center;
  color: white;
  font-size: 24rpx;
  margin-top: 10rpx;

}

.icon-image {
  width: 20px; /* 使图片适应容器宽度 */
  height: 20px; /* 使图片适应容器高度 */
}

.debug-info {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 10rpx;
  font-size: 20rpx;
  z-index: 100;
  max-height: 50vh;
  overflow-y: auto;
}

.debug-info text {
  display: block;
  margin-bottom: 4rpx;
}
</style>
