<template>
  <view class="container">
    <view class="content">
      <view class="text-content">
        <text class="question">🎂 你的生日是什么时候？</text>
        <text class="subtitle">完善个人信息</text>
      </view>

      <view class="date-picker-container">

        <view class="mask top"></view>
		<picker-view class="picker-view" :indicator-style="indicatorStyle" :value="value" @change="bindChange"
            mask-style="opacity:0">
            <picker-view-column class="picker-view-column">
                <view class="item" v-for="(item,index) in years" :key="index"><text class="text">{{item}}年</text></view>
            </picker-view-column>
            <picker-view-column class="picker-view-column">
                <view class="item" v-for="(item,index) in months" :key="index"><text class="text">{{item}}月</text>
                </view>
            </picker-view-column>
            <picker-view-column class="picker-view-column">
                <view class="item" v-for="(item,index) in days" :key="index"><text class="text">{{item}}日</text></view>
            </picker-view-column>
        </picker-view>
		<view class="mask bottom"></view>
      </view>

      <view class="continue-button" >
        <text class="arrow">→</text>
      </view>
    </view>
  </view>
</template>

<script lang="uts">
   export default {
       data() {
           const date = new Date()
           const _years : number[] = []
           const _year = date.getFullYear()
           const _months : number[] = []
           const _month : number = date.getMonth() + 1
           const _days : number[] = []
           const _day = date.getDate()
           for (let i = 2000; i <= _year; i++) {
               _years.push(i)
           }
           for (let i = 1; i <= 12; i++) {
               _months.push(i)
           }
           for (let i = 1; i <= 31; i++) {
               _days.push(i)
           }
           return {
               title: 'picker-view',
               years: _years as number[],
               year: _year as number,
               months: _months as number[],
               month: _month as number,
               days: _days as number[],
               day: _day as number,
               value: [_year - 2000, _month - 1, _day - 1] as number[],
               result: [] as number[],
               indicatorStyle: 'height: 50px;',
               // maskTopStyle: '',
               // maskBottomStyle: ''
           }
       },
       methods: {
   		clickView() {
   			
   		},
           bindChange(e : PickerViewChangeEvent) {
               const val = e.detail.value
               this.result = val
               this.year = this.years[val[0]]
               this.month = this.months[val[1]]
               this.day = this.days[val[2]]
           },
           setValue() {
               this.value = [0, 0, 0] as number[]
           },
           setValue1() {
               this.value = [10, 10, 10] as number[]
           },
       }
   }
</script>

<style>
   .container {
     display: flex;
     flex-direction: column;
     /* min-height: 300vh; */
     /* height:300vh; */
     background-color: #1c1c1e;
     padding: 40px 20px;
   }
   
   .content {
     flex: 1;
     display: flex;
     flex-direction: column;
     justify-content: space-between;
   }
   
   .text-content {
     margin-top: 60px;
     margin-bottom: 40px;
   }
   
   .question {
     font-size: 24px;
     color: #ffffff;
     margin-bottom: 8px;
   }
   
   .subtitle {
     font-size: 14px;
     color: #8e8e93;
   }
   
   .picker-view {
       width: 100%;
       height: 320px;
       margin-top: 10px;
	   height: 250px;
	   opacity: ;
   }

   .item {
       height: 50px;
   }

   .text {
       line-height: 50px;
       text-align: center;
	   color: #ffffff;
   }
   
   .continue-button {
     width: 50px;
     height: 50px;
     background-color: #8BC34A;
     border-radius: 25px;
     display: flex;
     justify-content: center;
     align-items: center;
     align-self: center;
     margin-bottom: 480px;
   }
   
   .arrow {
     color: #242424;
     font-size: 20px;
   }
   .mask {
     position: absolute;
     left: 0;
     right: 0;
     height: 100px;
     background-color: rgba(28, 28, 30, 0.8);
     z-index: 1;
   }
   
   .mask.top {
     top: 0;
   }
   
   .mask.bottom {
     bottom: 0;
   }
</style>

