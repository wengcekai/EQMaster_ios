<template>
  <view class="container">
    <view class="content">
      <view class="text-content">
        <text class="question">🎂 你的生日是什么时候？</text>
        <text class="subtitle">完善个人信息</text>
      </view>

      <view class="date-picker-container">
        <!-- <view class="mask top"></view> -->
        <picker-view
          class="picker-view"
          :indicator-style="indicatorStyle"
          :value="value"
          @change="bindChange"
        >
          <picker-view-column class="picker-view-column">
            <view
              class="item"
              v-for="(item, index) in years"
              :key="index"
            >
              <text class="text">{{ item }}年</text>
            </view>
          </picker-view-column>
          <picker-view-column class="picker-view-column">
            <view
              class="item"
              v-for="(item, index) in months"
              :key="index"
            >
              <text class="text">{{ item }}月</text>
            </view>
          </picker-view-column>
          <picker-view-column class="picker-view-column">
            <view
              class="item"
              v-for="(item, index) in days"
              :key="index"
            >
              <text class="text">{{ item }}日</text>
            </view>
          </picker-view-column>
        </picker-view>
        <!-- <view class="mask bottom"></view> -->
      </view>

      <view class="continue-button" @click="nextStep">
        <text class="arrow">→</text>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
      days: Array.from({length: 31}, (_, i) => i + 1),
      years: Array.from({length: 50}, (_, i) => 2024 - i),
      dateValue: [8, 16, 5], // 默认日期：9 月 17 日，2018 年
      indicatorStyle: 'height: 50px; border-top: 1px solid rgba(255, 255, 255, 0.5); border-bottom: 1px solid rgba(255, 255, 255, 0.5);',
      userId: '',
      username: '',
      gender: '',
    };
  },
  onLoad(options) {
    // 接收上一页传递的参数
    this.userId = options.userId;
    this.username = decodeURIComponent(options.username);
    this.gender = options.gender;
    console.log('Received data:', { userId: this.userId, username: this.username, gender: this.gender });
  },
  methods: {
    onDateChange(e) {
      this.dateValue = e.detail.value;
    },
    getItemStyle(isActive) {
      return `
        line-height: 50px;
        text-align: center;
        color: ${isActive ? '#ffffff' : 'rgba(255, 255, 255, 0.6)'};
        font-weight: ${isActive ? 'bold' : 'normal'};
      `;
    },
    nextStep() {
      const selectedDate = {
        month: this.months[this.dateValue[0]],
        day: this.days[this.dateValue[1]],
        year: this.years[this.dateValue[2]]
      };
      // 保存生日信息
      uni.setStorageSync('birthday', selectedDate);
      
      // 构建包含所有收集信息的 URL
      const nextPageUrl = `/pages/preference/preference2?userId=${this.userId}&username=${encodeURIComponent(this.username)}&gender=${this.gender}&birthday=${encodeURIComponent(JSON.stringify(selectedDate))}`;
      
      // 导航到下一个页面
      uni.navigateTo({ url: nextPageUrl });
    }
  }
};
</script>

<style scoped>
.container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #1c1c1e;
  padding: 40px 20px;
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.text-content {
  margin-top: 60px;
  margin-bottom: 40px;
}

.question {
  font-size: 24px;
  color: #ffffff;
  margin-bottom: 8px;
}

.subtitle {
  font-size: 14px;
  color: #8e8e93;
}

.date-picker-container {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
}

.date-picker {
  width: 100%;
  height: 250px;
}

.mask {
  position: absolute;
  left: 0;
  right: 0;
  height: 100px;
  background-color: #1c1c1e;
  z-index: 1;
}

.mask.top {
  top: 0;
}

.mask.bottom {
  bottom: 0;
}

.continue-button {
  width: 50px;
  height: 50px;
  background-color: #8BC34A;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  margin-bottom: 480px;
}

.arrow {
  color: #242424;
  font-size: 20px;
}
</style>
