<template>
  <view class="container">
    <view class="progress-bar">
      <!-- 显示当前步骤的进度 -->
      <view class="progress-indicator" :style="{ width: progressWidth }"></view>
    </view>

    <!-- 根据步骤显示内容 -->
    <view v-if="currentStep === 1" class="content">
      <!-- 不加框的文字 -->
      <text class="line-text1">高情商的你，性别是</text>

      <!-- 为每一行文字添加矩形框，并添加点击事件 -->
      <view 
        class="line-container" 
        :class="{ 'active': selectedGender === '男' }" 
        @click="selectGender('男')"
      >
        <text class="line-text">男</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedGender === '男'" class="icon-container">
          <image src="/static/icon1.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedGender === '女' }" 
        @click="selectGender('女')"
      >
        <text class="line-text">女</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedGender === '女'" class="icon-container">
          <image src="/static/icon1.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedGender === '二元性别并不能定义我' }" 
        @click="selectGender('二元性别并不能定义我')"
      >
        <text class="line-text">二元性别并不能定义我</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedGender === '二元性别并不能定义我'" class="icon-container">
          <image src="/static/icon1.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
    </view>

    <view v-else-if="currentStep === 2" class="content">
      <text class="line-text1">生活中，你经常被以下问题所困扰（多选）</text>
      <!-- 为每个问题添加矩形框，并添加点击事件 -->
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('难回的消息') }" 
        @click="toggleProblem('难回的消息')"
      >
        <text class="line-text">难回的消息</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('难回的消息')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('尴尬的场景') }" 
        @click="toggleProblem('尴尬的场景')"
      >
        <text class="line-text">尴尬的场景</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('尴尬的场景')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('保持向同事关系') }" 
        @click="toggleProblem('保持向同事关系')"
      >
        <text class="line-text">保持向同事关系</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('保持向同事关系')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('与上级领导良好关系') }" 
        @click="toggleProblem('与上级领导良好关系')"
      >
        <text class="line-text">与上级领导良好关系</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('与上级领导良好关系')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('难以深入环境') }" 
        @click="toggleProblem('难以深入环境')"
      >
        <text class="line-text">难以深入环境</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('难以深入环境')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
      <view 
        class="line-container" 
        :class="{ 'active': selectedProblems.includes('困难的工作沟通') }" 
        @click="toggleProblem('困难的工作沟通')"
      >
        <text class="line-text">困难的工作沟通</text>
        <!-- 条件渲染图标 -->
        <view v-if="selectedProblems.includes('困难的工作沟通')" class="icon-container">
          <image src="/static/icon2.png" class="icon" mode="widthFix"></image> <!-- 替换为你的图标地址 -->
        </view>
      </view>
    </view>

    <view v-else-if="currentStep === 3" class="content2">
      <!-- 显示过渡页图像 -->
      <view class="background-image" :style="{ backgroundImage: `url(${backgroundImage})` }"></view>
    </view>

    <view v-else-if="currentStep === 4" class="content3">
      <!-- 显示过渡页图像 -->
      <view class="background-image1" :style="{ backgroundImage: `url(${backgroundImage})` }"></view>
    </view>

    <!-- 底部自定义按钮，带有不同的图标 -->
    <image class="continue-button" src="/static/icon.png" @click="nextStep" mode="widthFix"></image> <!-- 替换为你的Next按钮图标地址 -->
  </view>
</template>

<script>
export default {
  data() {
    return {
      currentStep: 1,
      totalSteps: 4, // 总共四个步骤
      selectedGender: '', // 用于存储单选问题的答案
      selectedProblems: [], // 用于存储多选问题的答案
      genders: [ // 单选题的选项数据
        { value: '男', label: '男' },
        { value: '女', label: '女' },
        { value: '其他', label: '二元性别并不能定义我' }
      ],
      backgroundImages: [
        '/static/imagearea.png', // 第三步的背景图片路径
        '/static/imagearea2.png'  // 第四步的背景图片路径
      ],
      username: ''  // 用于存储从上一页面传递过来的用户名
    };
  },
  computed: {
    progressWidth() {
      return `${(this.currentStep / this.totalSteps) * 100}%`; // 计算进度条的宽度
    },
    backgroundImage() {
      // 根据当前步骤返回相应的背景图片路径
      return this.backgroundImages[this.currentStep - 3]; // 步骤 3 和 4 使用背景图片
    },
  },
  methods: {
    nextStep() {
      // 确保用户选择了性别或问题才能进入下一步
      if (this.currentStep === 1 && this.selectedGender === '') {
        uni.showToast({ title: '请选择性别', icon: 'none' });
        return;
      }
      if (this.currentStep === 2 && this.selectedProblems.length === 0) {
        uni.showToast({ title: '请选择至少一个选项', icon: 'none' });
        return;
      }

      if (this.currentStep < this.totalSteps) {
        this.currentStep += 1; // 切换到下一步
      } else {
        // 完成所有步骤后，导航到下一页面并传递用户信息
        uni.navigateTo({
          url: `/pages/test/test?username=${this.username}&gender=${this.selectedGender}&problems=${this.selectedProblems.join(',')}`
        });
      }
    },
    selectGender(value) {
      this.selectedGender = value; // 更新性别选择的值
    },
    toggleProblem(value) {
      // 如果选项已被选择，则取消选择；否则添加到已选选项
      if (this.selectedProblems.includes(value)) {
        this.selectedProblems = this.selectedProblems.filter(problem => problem !== value);
      } else {
        this.selectedProblems.push(value);
      }
    },
  },
  onLoad(options) {
    // 获取URL参数
    if (options.username) {
      this.username = options.username;  // 存储传递过来的用户名
    }
  }
};
</script>

<style scoped>
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  height: 110vh;
  background-color: #ffffff;
  padding: 0px;
  position: relative;
}

.progress-bar {
  width: 90%;
  height: 5px;
  background-color: #e0e0e0;
  margin-bottom: 20px;
  position: absolute;
  top: 0;
  left: 5%;
}

.progress-indicator {
  height: 100%;
  background-color: #4b9eff;
  position: absolute;
  top: 0;
  left: 0;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* 内容左对齐 */
  text-align: left; /* 文本左对齐 */
  width: 100%;
  flex: 1;
  justify-content: up;
  margin-bottom: 300px;
  padding-top: 20px; /* 增加容器顶部的内边距 */
  left: 5%;
}

.content2, .content3 {
  display: flex;
  flex-direction: column;
  align-items: center; /* 内容居中对齐 */
  text-align: left; /* 文本左对齐 */
  width: 300px;
  height: 200px;
  flex: 1;
  justify-content: center;
  margin-bottom: 160px;
  position: relative; /* 相对定位以便子元素绝对定位 */
  overflow: hidden; /* 隐藏超出的内容 */
}

.line-container {
  width: 85%; /* 矩形框的宽度 */
  height: 40px;
  padding: 12px; /* 矩形框的内边距 */
  margin: 8px; /* 矩形框的外边距 */
  border: 1px solid #ccc; /* 矩形框的边框颜色和宽度 */
  border-radius: 8px; /* 矩形框的圆角 */
  background-color: #ffffff; /* 矩形框的背景颜色 */
  position: relative; /* 确保图标容器在矩形框内绝对定位 */
  transition: background-color 0.3s, border-color 0.3s; /* 添加过渡效果 */
}

.line-container.active {
  border-color: #4b9eff; /* 激活状态下的边框颜色 */
  background-color: #e0f7ff; /* 激活状态下的背景颜色 */
}

.icon-container {
  position: absolute;
  right: 10px; /* 距离右侧的距离 */
  top: 50%; /* 垂直居中 */
  transform: translateY(-40%); /* 垂直居中调整 */
}

.icon {
  width: 20px; /* 图标的宽度 */
  height: 20px; /* 图标的高度 */
}

.line-text {
  font-size: 14px;
  margin: 0; /* 去除文字的默认外边距 */
}

.line-text1 {
  font-size: 14px;
  margin-bottom: 30px; /* 去除文字的默认外边距 */
  font-weight: bold; /* 设置文字加粗 */
  margin: 8px; /* 矩形框的外边距 */
}

.background-image  {
  width: 80%;
  height: 80%;
  background-size: cover;
  background-position: center;
}

.background-image1 {
  width: 50%;
  height: 50%;
  background-size: cover;
  background-position: center;
}

.continue-button {
  width: 13%; /* 调整按钮宽度 */
  height: 45px; /* 调整按钮高度 */
  margin-bottom: 30px;
  position: absolute; /* 使用绝对定位 */
  bottom: 110px; /* 距离底部的距离 */
  left: 80%; /* 距离左边的距离 */
  transform: translateX(-50%); /* 水平居中 */
}
</style>
