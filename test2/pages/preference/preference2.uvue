<template>
  <view class="container">
    <view class="content">
      <view class="text-content">
        <text class="question">🤔你通常会被哪些场景困扰呢？</text>
        <text class="subtitle">个性化偏好</text>
      </view>

      <view class="options-container">
        <view class="option-group">
          <view class="group-icon">
            <image src="/static/jobicon.png" mode="aspectFit" />
          </view>
          <view class="option-buttons">
            <button v-for="(option, index) in jobOptions" 
                    :key="index" 
                    :class="['option-button', `button-${index + 1}`, { active: selectedOptions.includes(option) }]"
                    @click="toggleOption(option)">
              {{ option }}
            </button>
          </view>
        </view>
        
        <view class="option-group1">
          <view class="group-icon">
            <image src="/static/relationshipicon.png" mode="aspectFit" />
          </view>
          <view class="option-buttons">
            <button v-for="(option, index) in relationshipOptions" 
                    :key="index" 
                    :class="['option-button', `button-${index + 7}`, { active: selectedOptions.includes(option) }]"
                    @click="toggleOption(option)">
              {{ option }}
            </button>
          </view>
        </view>
      </view>

      <view class="continue-button" @click="goToNextPage">
        <text class="arrow">→</text>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      jobOptions: ['难以融入新环境', '棘手的同事关系', '与上级维持良好关系', '难回的消息', '尴尬的饭局等社交场合', '困难的工作沟通'],
      relationshipOptions: ['难以维持长期关系', '感情平淡期', '得不到回应的喜欢', '感情受到伤害'],
      selectedOptions: [],
      userId: '',
      username: '',
      gender: '',
      birthday: null,
    };
  },
  onLoad(options) {
    // 接收上一页传递的参数
    this.userId = options.userId;
    this.username = decodeURIComponent(options.username);
    this.gender = options.gender;
    this.birthday = JSON.parse(decodeURIComponent(options.birthday));
    console.log('Received data:', { userId: this.userId, username: this.username, gender: this.gender, birthday: this.birthday });
  },
  methods: {
    toggleOption(option) {
      const index = this.selectedOptions.indexOf(option);
      if (index > -1) {
        this.selectedOptions.splice(index, 1);
      } else {
        this.selectedOptions.push(option);
      }
      console.log('Selected options:', this.selectedOptions);
    },
    goToNextPage() {
      if (this.selectedOptions.length > 0) {
        // 构建包含所有信息的URL
        const url = `/pages/preference/preference3?userId=${this.userId}&username=${encodeURIComponent(this.username)}&gender=${this.gender}&birthday=${encodeURIComponent(JSON.stringify(this.birthday))}&options=${encodeURIComponent(JSON.stringify(this.selectedOptions))}`;
        
        console.log('Navigating to:', url);
        uni.navigateTo({
          url: url,
          fail: (err) => {
            console.error('Navigation failed:', err);
            uni.showToast({
              title: '页面跳转失败',
              icon: 'none'
            });
          }
        });
      } else {
        console.log('No options selected');
        uni.showToast({
          title: '请至少选择一个选项',
          icon: 'none'
        });
      }
    }
  }
};
</script>

<style scoped>
.container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #1c1c1e;
  padding: 40px 20px 80px 20px;
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.text-content {
  margin-bottom: -20px;
}

.question {
  font-size: 18px;
  color: #ffffff;
  margin-bottom: 8px;
}

.subtitle {
  font-size: 14px;
  color: #8e8e93;
}

.options-container {
  margin-top: -40px;
  width: 100%; /* 确保容器占满整个宽度 */
  margin-bottom: 20px; /* 减少整个容器的底部间距 */
}

.option-group {

  display: flex;
  align-items: flex-start;
  margin-bottom: 15px; /* 减少每个组之间的间距 */
}

.option-group1 {
	  top:-140px;
  display: flex;
  align-items: flex-start;
  margin-bottom: 15px; /* 减少每个组之间的间距 */
}

.group-icon {
  width: 36px;
  height: 36px;
  margin-top: 15px;
  margin-right: 15px;
  flex-shrink: 0;
  margin-bottom: 0px; /* 减少图标和按钮之间的间距 */
}

.group-icon image {
  width: 100%;
  height: 100%;
}

.option-buttons {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 5px; /* 减少按钮之间的垂直间距 */
  left:50px;
  top:-40px;
  width: 100%; /* 按钮组也占满整个宽度 */
}

.option-button {
  /* 基础样式 */
  background-color: #2c2c2e;
  color: #ffffff;
  border: none;
  border-radius: 20px;
  padding: 5px 15px;
  font-size: 14px;
  text-align: left;
  display: inline-block;
  white-space: nowrap;
  max-width: 100%;
  margin-bottom: 5px; /* 减少每个按钮的部间距 */
}

/* 单独控制每个按钮的位置 */
.button-1 {
  position: relative;
  left: 0px;
  top: 0px;
}

.button-2 {
  position: relative;
  left: 140px;
  top: -55px;
}

.button-3 {
  position: relative;
  left: 0px;
  top: -55px;
}

.button-4 {
  position: relative;
  left: 160px;
  top: -110px;
}

.button-5 {
  position: relative;
  left: 0px;
  top: -110px;
}

.button-6 {
  position: relative;
  left: 0px;
  top: -110px;
}

.option-button.active {
  background-color: #30d158;
}

.continue-button {
  width: 50px;
  height: 50px;
  background-color: #30d158;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  margin-top: -360px; /* 将这里的值从 0px 改为负值 */
  position: relative; /* 添加相对定位 */
  z-index: 1; /* 确保按钮在其他元素之上 */
}

.arrow {
  color: #ffffff;
  font-size: 20px;
}

.colleague-button {
  position: relative;
  left: 140px;  /* 向右移动 */
  top: -55px;   /* 向上移动 */
}

/* Styles for the second group of buttons */
.button-7 {
  position: relative;
  left: 0px;
  top: 0px;
}

.button-8 {
  position: relative;
  left: 150px;
  top: -55px;
}

.button-9 {
  position: relative;
  left: 0px;
  top: -55px;
}

.button-10 {
  position: relative;
  left: 150px;
  top: -110px;
}

.button-11 {
  position: relative;
  left: 10px;
  top: 5px;
}

.button-12 {
  position: relative;
  left: 60px;
  top: 0px;
}

/* 可能需要调整整体布局以适应新的按钮组 */
.options-container {
  margin-bottom: 0px; /* 增加底部间距 */
}

.option-group {
  margin-bottom: 0px; /* 增加组间距 */
}

/* ... existing styles ... */
</style>